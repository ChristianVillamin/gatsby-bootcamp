{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/head.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["BlogPage","blogs","_public_static_d_190321672_json__WEBPACK_IMPORTED_MODULE_0__","data","allContentfulBlogPost","edges","map","edge","i","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","style","post","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","node","slug","title","publishedDate","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_head__WEBPACK_IMPORTED_MODULE_5__","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","Head","_public_static_d_1019946411_json__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_2__","site","siteMetadata","Header","_1019946411","react_default","header","gatsby_browser_entry","navList","navItem","activeClassName","activeNavItem","Footer","_2356257589","footer","author","Layout","props","container","content","children"],"mappings":"2KA+EeA,UAxEE,WACf,IAcMC,EAdIC,EAAAC,KAcSC,sBAAsBC,MAAMC,IAAI,SAACC,EAAMC,GACxD,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAMC,KAAMC,IAAG,GAAKR,EAAOC,GACxCC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAE,SAAWV,EAAKW,KAAKC,MAC3BV,EAAAC,EAAAC,cAAA,UAAKJ,EAAKW,KAAKE,OACfX,EAAAC,EAAAC,cAAA,SAAIJ,EAAKW,KAAKG,mBAMtB,OACEZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMH,MAAM,SACZX,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAMC,MAAOb,iHCtClC,IAAsBuB,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAK,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAAE,EAAAC,GAAAH,EAAAK,EAAAC,EAAA,sBAAAF,EAAAxB,IAAAoB,EAAA,KAAAA,EAAA,GAcyBO,QAAOC,QAELC,IAAMC,cAAc,+ECMhCC,UAjBU,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGEL,IAAM5B,cAAckC,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,oKCUIC,IAbF,SAAAP,GAAe,IAAZtB,EAAYsB,EAAZtB,MACRjB,EAAI+C,EAAA/C,KASV,OAAOM,EAAAC,EAAAC,cAACwC,EAAA,OAAD,CAAQ/B,MAAUA,EAAL,MAAgBjB,EAAKiD,KAAKC,aAAajC,mGCqD9CkC,EA9DA,WACb,IAAMnD,EAAIoD,EAAApD,KAUV,OACEqD,EAAA9C,EAAAC,cAAA,UAAQC,UAAWC,IAAM4C,QACvBD,EAAA9C,EAAAC,cAAA,UACE6C,EAAA9C,EAAAC,cAAC+C,EAAA,EAAD,CAAM9C,UAAWC,IAAMO,MAAOH,GAAG,KAC9Bd,EAAKiD,KAAKC,aAAajC,QAG5BoC,EAAA9C,EAAAC,cAAA,WACE6C,EAAA9C,EAAAC,cAAA,MAAIC,UAAWC,IAAM8C,SACnBH,EAAA9C,EAAAC,cAAA,UACE6C,EAAA9C,EAAAC,cAAC+C,EAAA,EAAD,CACE9C,UAAWC,IAAM+C,QACjBC,gBAAiBhD,IAAMiD,cACvB7C,GAAG,KAHL,SAQFuC,EAAA9C,EAAAC,cAAA,UACE6C,EAAA9C,EAAAC,cAAC+C,EAAA,EAAD,CACE9C,UAAWC,IAAM+C,QACjBC,gBAAiBhD,IAAMiD,cACvB7C,GAAG,SAHL,SAQFuC,EAAA9C,EAAAC,cAAA,UACE6C,EAAA9C,EAAAC,cAAC+C,EAAA,EAAD,CACE9C,UAAWC,IAAM+C,QACjBC,gBAAiBhD,IAAMiD,cACvB7C,GAAG,UAHL,UAQFuC,EAAA9C,EAAAC,cAAA,UACE6C,EAAA9C,EAAAC,cAAC+C,EAAA,EAAD,CACE9C,UAAWC,IAAM+C,QACjBC,gBAAiBhD,IAAMiD,cACvB7C,GAAG,YAHL,2CC9BG8C,EAlBA,WACb,IAAM5D,EAAI6D,EAAA7D,KAUV,OACEqD,EAAA9C,EAAAC,cAAA,UAAQC,UAAWC,IAAMoD,QACvBT,EAAA9C,EAAAC,cAAA,uBAAeR,EAAKiD,KAAKC,aAAaa,OAAtC,yCCCSC,IAZA,SAAAC,GACb,OACEZ,EAAA9C,EAAAC,cAAA,OAAKC,UAAWC,IAAMwD,WACpBb,EAAA9C,EAAAC,cAAA,OAAKC,UAAWC,IAAMyD,SACpBd,EAAA9C,EAAAC,cAAC8C,EAAD,MACCW,EAAMG,UAETf,EAAA9C,EAAAC,cAACsD,EAAD","file":"component---src-pages-blog-js-7e1b800719c620464d9c.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport style from \"./blog.module.scss\"\r\nimport Head from \"../components/head\"\r\n\r\nconst BlogPage = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allContentfulBlogPost(sort: { fields: publishedDate, order: DESC }) {\r\n        edges {\r\n          node {\r\n            title\r\n            slug\r\n            publishedDate(formatString: \"MMMM Do, YYYY\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const blogs = data.allContentfulBlogPost.edges.map((edge, i) => {\r\n    return (\r\n      <li className={style.post} key={`${edge}${i}`}>\r\n        <Link to={`/blog/${edge.node.slug}`}>\r\n          <h2>{edge.node.title}</h2>\r\n          <p>{edge.node.publishedDate}</p>\r\n        </Link>\r\n      </li>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <Layout>\r\n      <Head title=\"Blog\" />\r\n      <h1>Blog</h1>\r\n      <p>Posts will show up here later on.</p>\r\n      <ol className={style.post}>{blogs}</ol>\r\n    </Layout>\r\n  )\r\n  // const data = useStaticQuery(graphql`\r\n  //   query {\r\n  //     allMarkdownRemark {\r\n  //       edges {\r\n  //         node {\r\n  //           frontmatter {\r\n  //             title\r\n  //             date\r\n  //           }\r\n  //           fields {\r\n  //             slug\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // `)\r\n\r\n  // const blogs = data.allMarkdownRemark.edges.map((edge, i) => {\r\n  //   return (\r\n  //     <li className={style.post} key={`${edge}${i}`}>\r\n  //       <Link to={`/blog/${edge.node.fields.slug}`}>\r\n  //         <h2>{edge.node.frontmatter.title}</h2>\r\n  //         <p>{edge.node.frontmatter.date}</p>\r\n  //       </Link>\r\n  //     </li>\r\n  //   )\r\n  // })\r\n\r\n  // return (\r\n  //   <Layout>\r\n  //     <h1>Blog</h1>\r\n  //     <p>Posts will show up here later on.</p>\r\n  //     <ol className={style.posts}>{blogs}</ol>\r\n  //   </Layout>\r\n  // )\r\n}\r\n\r\nexport default BlogPage\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nconst Head = ({ title }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return <Helmet title={`${title} | ${data.site.siteMetadata.title}`} />\r\n}\r\n\r\nexport default Head\r\n","import React from \"react\"\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\r\n\r\nimport style from \"./header.module.scss\"\r\n\r\nconst Header = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <header className={style.header}>\r\n      <h1>\r\n        <Link className={style.title} to=\"/\">\r\n          {data.site.siteMetadata.title}\r\n        </Link>\r\n      </h1>\r\n      <nav>\r\n        <ul className={style.navList}>\r\n          <li>\r\n            <Link\r\n              className={style.navItem}\r\n              activeClassName={style.activeNavItem}\r\n              to=\"/\"\r\n            >\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              className={style.navItem}\r\n              activeClassName={style.activeNavItem}\r\n              to=\"/blog\"\r\n            >\r\n              Blog\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              className={style.navItem}\r\n              activeClassName={style.activeNavItem}\r\n              to=\"/about\"\r\n            >\r\n              About\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              className={style.navItem}\r\n              activeClassName={style.activeNavItem}\r\n              to=\"/contact\"\r\n            >\r\n              Contact\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nimport style from \"./footer.module.scss\"\r\n\r\nconst Footer = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          author\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <footer className={style.footer}>\r\n      <p>Created by {data.site.siteMetadata.author}, © 2019</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\"\r\n\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\nimport \"../styles/index.scss\"\r\nimport style from \"./layout.module.scss\"\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.content}>\r\n        <Header />\r\n        {props.children}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}