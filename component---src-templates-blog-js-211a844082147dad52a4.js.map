{"version":3,"sources":["webpack:///./src/templates/blog.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/head.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_contentful_rich_text_react_renderer__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_head__WEBPACK_IMPORTED_MODULE_3__","Blog","props","options","renderNode","embedded-asset-block","node","alt","data","target","fields","title","url","file","a","createElement","src","contentfulBlogPost","publishedDate","documentToReactComponents","body","json","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","Head","_public_static_d_1019946411_json__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","site","siteMetadata","Header","_1019946411","react_default","className","style","header","gatsby_browser_entry","to","navList","navItem","activeClassName","activeNavItem","Footer","_2356257589","footer","author","Layout","container","content","children"],"mappings":"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","file":"component---src-templates-blog-js-211a844082147dad52a4.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Head from \"../components/head\"\r\n\r\n// export const query = graphql`\r\n//   query($slug: String!) {\r\n//     markdownRemark(fields: { slug: { eq: $slug } }) {\r\n//       frontmatter {\r\n//         title\r\n//         date\r\n//       }\r\n//       html\r\n//     }\r\n//   }\r\n// `\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    contentfulBlogPost(slug: { eq: $slug }) {\r\n      title\r\n      publishedDate(formatString: \"MMMM Do, YYYY\")\r\n      body {\r\n        json\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Blog = props => {\r\n  const options = {\r\n    renderNode: {\r\n      \"embedded-asset-block\": node => {\r\n        const alt = node.data.target.fields.title[\"en-US\"]\r\n        const url = node.data.target.fields.file[\"en-US\"].url\r\n        return <img alt={alt} src={url} />\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Head title={props.data.contentfulBlogPost.title} />\r\n      <h1>{props.data.contentfulBlogPost.title}</h1>\r\n      <p>{props.data.contentfulBlogPost.publishedDate}</p>\r\n      {documentToReactComponents(\r\n        props.data.contentfulBlogPost.body.json,\r\n        options\r\n      )}\r\n      {/* <h1>{props.data.markdownRemark.frontmatter.title}</h1>\r\n      <p>{props.data.markdownRemark.frontmatter.date}</p>\r\n      <div\r\n        dangerouslySetInnerHTML={{ __html: props.data.markdownRemark.html }}\r\n      ></div> */}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nconst Head = ({ title }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return <Helmet title={`${title} | ${data.site.siteMetadata.title}`} />\r\n}\r\n\r\nexport default Head\r\n","import React from \"react\"\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\r\n\r\nimport style from \"./header.module.scss\"\r\n\r\nconst Header = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <header className={style.header}>\r\n      <h1>\r\n        <Link className={style.title} to=\"/\">\r\n          {data.site.siteMetadata.title}\r\n        </Link>\r\n      </h1>\r\n      <nav>\r\n        <ul className={style.navList}>\r\n          <li>\r\n            <Link\r\n              className={style.navItem}\r\n              activeClassName={style.activeNavItem}\r\n              to=\"/\"\r\n            >\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              className={style.navItem}\r\n              activeClassName={style.activeNavItem}\r\n              to=\"/blog\"\r\n            >\r\n              Blog\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              className={style.navItem}\r\n              activeClassName={style.activeNavItem}\r\n              to=\"/about\"\r\n            >\r\n              About\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              className={style.navItem}\r\n              activeClassName={style.activeNavItem}\r\n              to=\"/contact\"\r\n            >\r\n              Contact\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nimport style from \"./footer.module.scss\"\r\n\r\nconst Footer = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          author\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <footer className={style.footer}>\r\n      <p>Created by {data.site.siteMetadata.author}, © 2019</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\"\r\n\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\nimport \"../styles/index.scss\"\r\nimport style from \"./layout.module.scss\"\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.content}>\r\n        <Header />\r\n        {props.children}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}